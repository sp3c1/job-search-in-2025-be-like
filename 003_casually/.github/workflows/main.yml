name: CI/CD

on:
  push:
    branches:
      - '**'

jobs:
  check-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check branch name
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          if [[ ! $BRANCH_NAME =~ ^(dev|staging|production-new|production|hotfix/.*|bugfix/.*|feature/.*|dependabot/.*|main|master)$ ]]; then
            echo "Error: Branch name '$BRANCH_NAME' is not allowed. Please follow the guidelines of the middlelayer monorepo."
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-branch
    container:
      image: node:20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies and build
        run: |
          node -v
          npm ci

      - name: Build Common
        run: |
          npm run build:libs:all

      - name: Create artifact archive
        run: |
          tar -czvf artifact.tar.gz node_modules dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifact.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:20
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
        options: >-
          --health-cmd="curl --silent --show-error --fail http://localhost:9200/_cluster/health || exit 1"
          --health-timeout=30s
          --health-retries=3
          --publish 9200:9200
          --env discovery.type=single-node
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Extract artifact archive
        run: |
          tar -xzvf artifact.tar.gz

      - name: Run tests
        run: |
          npm run build:apps:import-articles
          sed -i 's/localhost:9200/elasticsearch:9200/g' .env.test
          cat .env.test
          cp .env.test .env
          node ./dist/apps/import-articles/main.js -f mock-data.ndjson -i articles
          npm run test
